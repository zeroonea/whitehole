// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhiteHole.Repository;

#nullable disable

namespace WhiteHole.Repository.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20220927162057_update1")]
    partial class update1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WhiteHole.Repository.Models.WhiteHoleObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("ObjectJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ObjectJson");

                    b.Property<string>("ObjectName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ObjectName");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("WhiteHoleObject");
                });

            modelBuilder.Entity("WhiteHole.Repository.Models.WhiteHoleObjectKV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CreatedBy");

                    b.Property<int>("ObjectId")
                        .HasColumnType("int");

                    b.Property<string>("ObjectKey")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ObjectKey");

                    b.Property<string>("ObjectName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ObjectName");

                    b.Property<string>("ObjectValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ObjectValue");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("ObjectId");

                    b.ToTable("WhiteHoleKV");
                });

            modelBuilder.Entity("WhiteHole.Repository.Models.WhiteHoleObjectRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CreatedBy");

                    b.Property<int>("Object1Id")
                        .HasColumnType("int");

                    b.Property<string>("Object1Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Object1Name");

                    b.Property<int>("ObjectNId")
                        .HasColumnType("int");

                    b.Property<string>("ObjectNName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ObjectNName");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Object1Id");

                    b.HasIndex("ObjectNId");

                    b.ToTable("WhiteHoleObjectRelation");
                });

            modelBuilder.Entity("WhiteHole.Repository.Models.WhiteHoleObjectKV", b =>
                {
                    b.HasOne("WhiteHole.Repository.Models.WhiteHoleObject", "Object")
                        .WithMany()
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Object");
                });

            modelBuilder.Entity("WhiteHole.Repository.Models.WhiteHoleObjectRelation", b =>
                {
                    b.HasOne("WhiteHole.Repository.Models.WhiteHoleObject", "Object1")
                        .WithMany()
                        .HasForeignKey("Object1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhiteHole.Repository.Models.WhiteHoleObject", "ObjectN")
                        .WithMany()
                        .HasForeignKey("ObjectNId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Object1");

                    b.Navigation("ObjectN");
                });
#pragma warning restore 612, 618
        }
    }
}
